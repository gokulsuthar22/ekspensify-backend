name: CI/CD Pipeline

on:
  push:
    branches:
      - dev

jobs:
  build-and-deploy:
    runs-on: self-hosted

    env:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      REDIS_URL: ${{ secrets.REDIS_URL }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      MAIL_HOST: ${{ secrets.MAIL_HOST }}
      MAIL_PORT: ${{ secrets.MAIL_PORT }}
      MAIL_USER: ${{ secrets.MAIL_USER }}
      MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
      S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
      S3_BUCKET_REGION: ${{ secrets.S3_BUCKET_REGION }}
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
      CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
      CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      JWT_EXPIRES_IN: ${{ secrets.JWT_EXPIRES_IN }}
      ONESIGNAL_APP_ID: ${{ secrets.ONESIGNAL_APP_ID }}
      ONESIGNAL_API_KEY: ${{ secrets.ONESIGNAL_API_KEY }}
      ONESIGNAL_API_BASE_URL: ${{ secrets.ONESIGNAL_API_BASE_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '21'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Deploy Prisma migrations
        run: npx prisma migrate deploy

      - name: Start production
        run: npm start
